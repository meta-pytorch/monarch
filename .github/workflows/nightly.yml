name: Nightly Wheel Push

on:
  pull_request:
      branches:
        - main
      paths:
        - .github/workflows/nightly.yml
  workflow_dispatch:  # Allow manual triggering
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_number || github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    name: Build and Push Nightly Wheel
    strategy:
      fail-fast: false  # Changed to false to see results from all Python versions
      matrix:
        python-version: ["3.10"]
        include:
          - name: 4xlarge
            runs-on: linux.g5.4xlarge.nvidia.gpu
            torch-spec: '--pre torch --index-url https://download.pytorch.org/whl/nightly/cu126'
            gpu-arch-type: "cuda"
            gpu-arch-version: "12.6"
    uses: pytorch/test-infra/.github/workflows/linux_job_v2.yml@main
    secrets: inherit
    with:
      timeout: 60
      runner: ${{ matrix.runs-on }}
      gpu-arch-type: ${{ matrix.gpu-arch-type }}
      gpu-arch-version: ${{ matrix.gpu-arch-version }}
      submodules: recursive
      upload-artifact: monarch-${{ matrix.python-version }}-${{ matrix.gpu-arch-type }}${{ matrix.gpu-arch-version }}
      secrets-env: PYPI_TOKEN
      script: |
        conda create -n venv python=3.10 -y
        conda activate venv
        export PATH=/opt/rh/devtoolset-10/root/usr/bin/:$PATH
        python -m pip install --upgrade pip

        # Install native dependencies
        dnf update -y
        dnf install clang-devel libunwind libunwind-devel -y

        # Install rust and setup nightly toolchain
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        source $HOME/.cargo/env
        rustup toolchain install nightly
        rustup default nightly

        # Install build dependencies
        pip install -r build-requirements.txt

        chmod +x scripts/push_nightly.sh
        ./scripts/push_nightly.sh
