name: Docs

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: docs-${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Documentation
    uses: pytorch/test-infra/.github/workflows/linux_job_v2.yml@main
    with:
      timeout: 120
      runner: linux.g5.4xlarge.nvidia.gpu
      submodules: recursive
      script: |
        # Source common setup functions
        source scripts/common-setup.sh

        # Setup build environment (conda + system deps + rust + build deps)
        setup_build_environment "3.10"

        # Install documentation dependencies
        pip install -r docs/requirements.txt

        # Set environment variables for full build with CUDA support
        export USE_CUDA=1
        export USE_TENSOR_ENGINE=1
        export RUSTFLAGS="-Zthreads=16"
        export _GLIBCXX_USE_CXX11_ABI=1

        # Install CUDA and NCCL dependencies for documentation generation
        dnf install -y cuda-toolkit-12-0 cuda-12-0 libnccl-devel

        # Generate Rust API documentation for all crates in the workspace
        # This will include CUDA-dependent crates like nccl-sys, cuda-sys, etc.
        cargo +nightly doc --workspace --no-deps --document-private-items

        # Create an index.html file in the target/doc directory to serve as the main entry point
        echo '<meta http-equiv="refresh" content="0; url=hyperactor/index.html">' > target/doc/index.html

        # Ensure the target/doc directory exists in the expected location for Sphinx
        mkdir -p docs/source/target
        cp -r target/doc docs/source/target/

        # Build Sphinx documentation
        cd docs
        make html

        # Move the built documentation to the artifact directory
        mkdir -p "${RUNNER_ARTIFACT_DIR}/docs"
        cp -r build/html/* "${RUNNER_ARTIFACT_DIR}/docs/"

      upload-artifact: monarch-docs-${{ github.sha }}

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: monarch-docs-${{ github.sha }}
          path: docs

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
