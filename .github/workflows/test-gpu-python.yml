name: Test GPU Python

on:
  workflow_call:
    inputs:
      artifact-name:
        description: 'Wheel artifact name from build workflow'
        required: true
        type: string

concurrency:
  group: test-gpu-python-${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_number || github.ref }}
  cancel-in-progress: true

jobs:
  test-gpu-python:
    name: Test GPU Python (cuda12.6-py3.10)
    uses: pytorch/test-infra/.github/workflows/linux_job_v2.yml@main
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: 4xlargegpu
            runs-on: linux.g5.4xlarge.nvidia.gpu
            torch-spec: '--pre torch --index-url https://download.pytorch.org/whl/nightly/cu126'
            gpu-arch-type: "cuda"
            gpu-arch-version: "12.6"
    with:
      timeout: 120
      runner: ${{ matrix.runs-on }}
      gpu-arch-type: ${{ matrix.gpu-arch-type }}
      gpu-arch-version: ${{ matrix.gpu-arch-version }}
      submodules: recursive
      download-artifact: ${{ inputs.artifact-name }}
      script: |
        # Source common setup functions
        source scripts/common-setup.sh

        # Setup test environment
        setup_test_environment

        # Setup Tensor Engine dependencies
        setup_tensor_engine

        # Setup CUDA environment and library paths
        setup_cuda_environment

        # Install the built wheel from artifact
        install_wheel_from_artifact

        # tests the type_assert statements in test_python_actor are correct
        # pyre currently does not check these assertions
        pyright python/tests/test_python_actors.py

        # Run GPU Python tests split into 10 groups sequentially
        # Each group runs separately with process cleanup in between
        pip install pytest-split

        # Run tests with the v0 API
        run_test_groups 0

        # Run tests with the v1 API
        run_test_groups 1

        # TODO(meriksen): temporarily disabled to unblock lands while debugging
        # mock CUDA issues on the OSS setup
        # python python/tests/test_mock_cuda.py
